ext.coverageExclude = List.of(
        "**/config/*",
        "**/infrastructure/*",
        "**/common/*",
        "**/domain/*",
        "**/*ServerApplication*"
)

jacoco {
    toolVersion = '0.8.12'
}

tasks.jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false

        xml.destination(file("build/jacoco/jacoco.xml"))
        html.destination(file("build/jacoco/jacoco.html"))
    }

    finalizedBy(tasks.jacocoTestCoverageVerification)

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: coverageExclude)
        }))
    }
}

tasks.jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            // 클래스 당 커버리지 50% 이상
            limit {
                counter = "LINE"
                value = "COVEREDRATIO"
                minimum = BigDecimal.valueOf(0.5)
            }

            // 클래스 당 150줄 미만
            limit {
                counter = "LINE"
                value = "TOTALCOUNT"
                maximum = BigDecimal.valueOf(150)
            }

            limit {
                counter = 'COMPLEXITY'
                minimum = 0.5
            }

            excludes = coverageExclude.stream()
                    .collect { exclude ->
                        exclude.toString()
                                .replace("**", "*")
                                .replace('/', '.')
                    }
        }
    }
}
